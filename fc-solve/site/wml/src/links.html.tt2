[%- SET title = "Freecell Solver Links" -%]

[%- WRAPPER wrap_html -%]

<toc />

[% WRAPPER h2_section id = "resources", title = "Resources" %]

<p class="desc">
Freecell Solver Resources on the Net.
</p>

<ul>
<li>
<p>
<a href="http://groups.yahoo.com/group/fc-solve-discuss/">Freecell Solver's
Mailing-List</a> - a mailing-list dedicated to discussing the usage
and development of Freecell Solver and general techniques for solving
card solitaire games. Hosted by
<a href="http://groups.yahoo.com/">YahooGroups</a>.
</p>
</li>

<li>
<p>
<a href="http://fc-solve.blogspot.com/">The Freecell Solver Blog</a> - a blog
dedicated to Freecell Solver, solving Freecell and other related issues.
</p>
</li>

<li>
<p>
<a href="http://freecode.com/projects/freecellsolver">Freecode.com’s
App-Index Record</a>
- the record for Freecell Solver at Freecode (formerly known as
Freshmeat.net). You can find there a version
history, a Freecode internal hit count, and other useful information.
</p>
</li>

<li>
<p>
<a href="[% presentation_url %]">Freecell
Solver Lecture</a> - A lecture I gave to the
<a href="http://www.haifux.org/">Haifa Linux Club</a> about the
development of Freecell Solver.
</p>
</li>

[% IF 0 %]
<li>
<p>
<a href="http://developer.berlios.de/project/?group_id=66">BerliOS' Project
Page</a> - contains instructions for checking out the source from
<a href="http://svn.berlios.de/svnroot/repos/fc-solve/trunk/">its Subversion
repository</a> and other goodies.
</p>
</li>

<li>
<p>
<a href="http://svn.berlios.de/viewcvs/fc-solve/">ViewVC Repository Viewer</a>
- allows one to browse the repository online with convenience. See also
<a href="http://userscripts.org/scripts/show/35046">this GreaseMonkey script
to provide links back to the Subversion repository's URLs</a>
</p>
</li>

<li id="bitbucket_proj">
<p>
<a href="http://bitbucket.org/shlomif/fc-solve">Project Page on Bitbucket</a> -
contains a mirror of the version control repository, a bug/issue tracker,
and other resources.
</p>
</li>

[% END %]

<li>
<p>
<a href="https://github.com/shlomif/fc-solve">Project Page on GitHub</a> -
contains the canonical Git repository of Freecell Solver (forks and
pull requests are welcome!), as well as an issue tracker, a wiki,
and some graphs.
</p>
</li>

<li>
<p>
<a href="http://code.google.com/p/fc-solve/">Google Code Project Page</a> -
contains the old Subversion repository.
</p>
</li>

</ul>

[% END %]

[% WRAPPER h2_section id = "technologies", title = "Technologies" %]

<p class="desc">
Technologies used by Freecell Solver or that aided in its development.
</p>

<ul>
<li>
<p>
<a href="http://www.msu.edu/user/pfaffben/avl/">libavl</a> - a very nice
library which contains optimized C implementations of an AVL and Red-Black
binary trees. It used to be GPLed but is now LGPLed, which means it can be
used in open-source and proprietary code.
</p>
</li>

<li>
<p>
<a href="http://libredblack.sourceforge.net/">libredblack</a> - a
C implementation of a Red-Black tree. Takes some modifications to
compile on Win32. LGPL, so can be used by code of any licence.
</p>
</li>

<li>
<p>
<a href="http://www.gtk.org/">glib</a> - a C library used by gtk+, which
can also be used separately (as is the case with Freecell Solver). Contains
implementations of a hash, and an unoptimized balanced binary tree. Both
are slower than libavl/libredblack or the internal hash implementation, and
it is less programmer-friendly.
</p>
</li>

<li>
<p>
<a href="http://www.heyes-jones.com/astar.html">The A* scan</a> -
a states graph scan that uses a priority queue for determining which state
to go to next. The page contains some source code, but the explanation
is also very good. Note that in Freecell Solver, we ended up implementing
a
<a href="http://en.wikipedia.org/wiki/Best-first_search">Best-first search</a>
instead due to a misunderstanding.
</p>
</li>

<li>
<p>
<a href="http://dmalloc.com/">The dmalloc malloc debugging library</a> -
a library to trace memory leaks. Freecell Solver used to have some of those
in various stages of its development, and this library helped to remove
them. It has a rather awkward output, and I had to use a debugger
interactively to complement it, but it is still quite helpful. Now mostly
superseded by <a href="#valgrind">Valgrind</a>.
</p>
</li>

<li>
<p>
<a href="http://www.cmake.org/">CMake</a> - a cross-platform, open-source
build system, which is used by Freecell Solver to portably build
dynamically-linked libraries and facilitate the build process on different
operating systems. It replaced
<a href="http://www.shlomifish.org/open-source/anti/autohell/">GNU Autoconf, Automake and
Libtool</a>, which predate CMake and have gained popularity lacking any
good competition, but are more error-prone and slow.
</p>
</li>

<li id="valgrind">
<p>
<a href="https://valgrind.org/">Valgrind</a> - a sophisticated
memory debugger for x86-linux and other platforms. Helped diagnose a few hard-to-catch bugs in
Freecell Solver and is now also used in the automated tests' suite.
</p>
</li>

<li>
<p>
<a href="http://www.vim.org/">Vim - Vi Improved</a> - an excellent
cross-platform text editor with many powerful features.
</p>
</li>

<li>
<p>
<a href="http://subversion.tigris.org/">Subversion</a> - an Open-Source
version control management system that has been used in maintaining the
Freecell Solver code-base. It replaced <a
href="http://www.cvshome.org/">CVS</a> which is older and much more limited.
</p>
</li>

<li>
<p>
<a href="http://perl-begin.org/">Perl</a> - Perl is a sophisticated,
high-level, dynamic programming language. It is often considered a "scripting
language", but can be easily used for writing large-scale and production code.
Perl proved useful for writing a lot of code to automate many tasks in the
development of Freecell Solver. Lately, it was also utilised as the foundation
for its test suite, especially in writing <a href="[% base_path %]verify-code/">the
solutions' verification code</a>.
</p>
</li>

<li>
<p>
<a href="http://www.gnu.org/software/gdb/">GDB, the GNU Debugger</a> -
a powerful, cross-platform, scriptable, and open-source command-line
debugger for binary programs (C, C++, Assembly, etc.). Made debugging and
fixing many hard-to-catch bugs much easier.
</p>
</li>

<li>
<p>
<a href="http://www.methods.co.nz/asciidoc/">AsciiDoc</a> - a lightweight
markup language (with open-source converters) that allows to write plain-text
and convert it to XHTML, to
<a href="http://www.docbook.org/">DocBook/XML</a>, and subsequently
to other formats such as PDFs, or UNIX man pages. We use it for
<a href="[% base_path %]docs/#distributed-docs">the distributed documentation</a>.
</p>
</li>

<li>
<p>
<a href="http://mingw-w64.sourceforge.net/">MinGW-w64</a> - a port of the
GNU build tool-chain (including GCC) to Windows 32-bit and Windows 64-bit.
Used for preparing Microsoft Windows packages.
</p>
</li>

<li>
<p>
<a href="http://strawberryperl.com/">Strawberry Perl</a> - an open source
distribution of Perl 5 for Windows, which is used to help build the Freecell
Solver’s package there. For a while, we also used
<a href="http://dwimperl.szabgab.com/">DWIM Perl for Windows</a>, which is
based on Strawberry and is more encompassing, but it fell out
of maintenance.
</p>
</li>

<li>
<p>
<a href="http://python.net/crew/theller/ctypes/">ctypes</a> - an advanced
foreign function interface (FFI) for Python. Was used for automated testing.
</p>
</li>

<li>
<p>
<a href="https://metacpan.org/module/Inline::C">Inline::C</a> - Inline::C
allows one to write Perl subroutines in C. Freecell Solver uses it
for automated testing and for wrapping some of the internal and external C
APIs.
</p>
</li>

<li>
<p>
<a href="https://travis-ci.org/">Travis CI</a> - an open source and
hosted <a href="http://en.wikipedia.org/wiki/Continuous_integration">continuous integration (“CI”)</a> service, provided free-of-charge for
public GitHub projects.
</p>
</li>

<li>
<p>
<a href="https://www.appveyor.com/">AppVeyor</a> - a
hosted <a href="http://en.wikipedia.org/wiki/Continuous_integration">continuous integration (“CI”)</a> service for Windows and Linux builds, provided
free-of-charge for public GitHub/Bitbucket/GitLab/etc. projects.
</p>
</li>

<li>
<p>
<a href="https://cyan4973.github.io/xxHash/">xxHash</a> - a fast non-cryptographic hash function.
</p>
</li>

<li id="emscripten">
<p>
<a href="https://emscripten.org/">Emscripten</a> - an LLVM
to JavaScript compiler.
</p>
</li>

<li>
<p>
<a href="https://pypi.org/project/cffi/">Python cffi</a> - a foreign
function interface for Python. Replaced ctypes.
</p>
</li>

<li>
<p>
<a href="https://github.com/jzaefferer/webpack-jquery-ui/">webpack-jquery-ui</a> by
<a href="https://bassistance.de/">Jörn Zaefferer</a> was used as the basis
of the trimmed jQuery UI bundle (also see <a href="https://github.com/shlomif/webpack-jquery-ui/tree/shlomif-tab-plugin">the
.tabs() only branch</a>, as well as <a href="https://webpack.js.org/">webpack</a>
and <a href="https://jqueryui.com/">jQuery UI</a> themselves.)
</p>
</li>
</ul>

[% END %]

[% WRAPPER h2_section id = "front_ends", title = "Programs that use Freecell Solver" %]

<ul>
<li>
<p>
<a href="http://www.kde.org/kdegames/">kpat</a> - a Solitaire suite for
the <a href="http://www.kde.org/">KDE</a> desktop for UNIXes.
It used to use Freecell Solver to solve its Freecell boards, starting of the
version that was shipped with KDE 2.1. After KDE 4.0, it converted to use
a modified version of <a href="#patsolve">Tom Holroyd’s patsolve</a>. Note
that in the recent KDE 5 pre-release of kpat a patch by the Freecell Solver
developers was applied that converted it to use the latter as a solver for
Freecell and Simple Simon.
</p>
</li>

<li>
<p>
<a href="http://www.ambermango.com/f3d/">Freecell3D</a> - a 3-Dimensional
Direct-X Freecell Implementation for Windows. Shareware.
</p>
</li>

<li id="freecell-pro">
<p>
<a href="http://cards.wikia.com/wiki/FreeCell_Pro">FreeCell Pro</a> - a
free Freecell implementation for Windows with many professional features.
Integrated Tom Holroyd's Patsolve, and the original Don Woods' solver
as well as my own. <a href="don_woods.html">Source code</a> is available.
</p>
</li>

<li>
<p>
<a href="http://pysolfc.sourceforge.net/">PySolFC</a> - a collection of more
than 1,000 Solitaire card games originally based on PySol. Open source under
version 3 of the GPL. Has optional support for playing using the Freecell
Solver executable or its shared library. Note that Shlomi Fish has adopted it
and now co-maintains it, after the previous maintainers became <a
href="https://en.wikipedia.org/wiki/Missing_in_action_(disambiguation)">missing
in action</a>.
</p>
</li>

<li>
<p>
<a href="https://foss-card-games.github.io/Solitairey/">Solitairey</a> - an open source
web-based card solitaire game. Was forked from the last commit which contained
a license file. In the <a href="https://github.com/foss-card-games/Solitairey">forked source code</a>,
the original solver for Freecell was replaced by the <a href="#emscripten">Emscripten</a>
port of libfreecell-solver.
</p>
</li>

</ul>

[% END %]

[% WRAPPER h2_section id = "people", title = "People" %]

<p class="desc">
Links to the homepages of people who contributed in any way to Freecell
Solver.
</p>

<ul>

<li>
<p>
<a href="http://people.kde.org/stephan.html">Stephan Kulow</a> -
as the maintainer of kpat for a brief period, he contributed bug fixes,
memory leaks reports, and general commentary to Freecell Solver. Stephan and
I still hold discussions about FCS in the mailing-list or in private.
</p>
</li>

<li>
<p>
<a href="http://www.heyes-jones.com/">Justin Heyes-Jones</a> - I learned about the A* scan through his web-page,
and he allowed me to incorporate his binary heap code into Freecell Solver.
</p>
</li>

<li>
<p>
<a href="http://www.oberhumer.com/mfx/">Markus FXJ Oberhumer</a> -
contributed some bug-fixes and bug-reports
to Freecell Solver. He is the author of
<a href="http://pysolfc.sourceforge.net/">PySol</a>,
a very nice Solitaire suite which is written in Python. I used its
code to write a script that automatically generates its initial boards.
</p>
</li>

<li>
<p>
<a href="http://members.tripod.com/professor_tom/">Dr. Tom Holroyd</a> -
author of Patsolve and someone whom I discussed Freecell solving with
for many E-mail transactions. He inspired or encouraged many features
in Freecell Solver.
</p>
</li>

<li>
<p>
<a href="http://www.shlomifish.org/open-source/interviews/adrian-ettlinger.html">Interview with Adrian Ettlinger</a> -
an interview with Adrian Ettlinger, the maintainer of
<a href="https://cards.fandom.com/wiki/FreeCell_Pro">FreeCell Pro</a>, who
helped in adapting it to make use of Freecell Solver. Adrian also
maintained <a href="http://www.rrhistorical.com/rrdata/">a page about the
American Railroad History Database</a>.
</p>
<p>
Sadly, he passed away on 2013 and there is <a href="https://en.wikipedia.org/wiki/Adrian_Ettlinger">a wikipedia page about him</a>.
</p>
</li>

</ul>

[% END %]

[% WRAPPER h2_section id = "other_solvers", title = "Other Solvers" %]

<p class="desc">
We have competition. But there's nothing wrong with competition. ;-)
</p>

<ul>
<li id="patsolve">
<p>
<a href="https://github.com/shlomif/patsolve">patsolve</a> -
a C program that automatically solves games of Freecell and Seahaven
Towers. The open source code is available - originally under the GPL,
but later converted into the MIT/Expat licence, in hope of a future integration
with Freecell Solver. Its author, Tom Holroyd, and I discussed Freecell
solving for quite a few E-mail transactions, before I established the
mailing-list.
</p>
<p>
Note that I later modified the code and integrated it with the Freecell
Solver code-base.
</p>
</li>

<li>
<p>
<a href="http://www.solitairelaboratory.com/fcpro.html">Freecell Pro</a> -
a Freecell implementation for Win32 that contains the solver by
<a href="http://www.icynic.com/~don/">Don Woods</a>.
Very fast and relatively accurate solving. The <a href="don_woods.html">Source
code</a> is available.
</p>
</li>

<li>
<p>
<a href="http://www.ensicaen.ismra.fr/~delvare/devel/gfreecell/gfreecell.html">
Gfreecell</a> -
an implementation of Freecell for Gtk+ with its own solver.
Source code is available, but it's in French. <code>%-)</code>
</p>
</li>

<li>
<p>
<a href="http://notabdc.vip.sina.com/EngPage/e_solver.htm#FreecellTool">Freecell
Tool</a> -
a Win32 program that hijacks games out of Microsoft Freecell and displays
their solution. Provided the inspiration for Freecell Solver's Random-DFS-based
scans.
</p>
</li>

<li>
<p>
<a href="http://www.xs4all.nl/~odemar/braincell/brainjam.htm">Berto's Freecell and
Brain Jam Solvers</a> - Two programs for Windows that solve Freecell and
Baker's Game (which he refers to as Brain Jam). Source code is not
available.
</p>
</li>

<li>
<p>
<a href="http://www.winsite.com/bin/Info?500000006158">autofree</a> -
A freeware program by Lingyun Tuo that automatically solves Freecell.
</p>
</li>

<li>
<p>
<a href="http://www.barthelet.org/freecell/freecell.html">A Solver for
Mathematica</a> - a Mathematica application by Luc Barthlet that solves
Freecell games. Source code is available and is explained in detail.
</p>
</li>

<li>
<p>
<a href="http://www.williamtp.com/cv.html">William Tunstall-Pedoe's
Solver</a> - he mentions he wrote one in his C.V., which contains other
interesting artificial intelligence musings. The source code and the binary
are not available for free download online and may or may not be available
upon request.
</p>
</li>

<li>
<p>
<a href="http://seahaven.sourceforge.net/">X11 Seahaven</a> - contains
C++ source code for a Seahaven Towers auto-solver.
</p>
</li>

<li>
<p>
<a href="http://kevin.atkinson.dhs.org/freecell/">Common LISP Solver</a> -
by Kevin Atkinson and Shari Holstege. Written in Common LISP and the
source code is available under the GPL. It was written as part of an AI
course project and contains a final report.
</p>
</li>

<li>
<p>
<a href="[% doxygen_url %]">C++ Port of Freecell Solver by Michael Mann</a> -
Michael Mann ported FCS to C++ and used
<a href="http://www.doxygen.org/">Doxygen</a> to cross-reference and
document the code. Covers version 2.2.x of the program.
</p>
</li>

<li>
<p>
<a href="http://members.socket.net/~dominic1976/">Dominic Veit's Freecell
Solver</a> - a solver written in Java that does not use back-tracking and is
still able to win 85% of the games.
</p>
</li>

<li>
<p>
<a href="http://www.numin8r.us/programs/">Gary Campbell's FCELL.COM</a> -
a solver for Freecell written in x86 assembly for DOS and compatible
environments. Reportedly very fast and uses some interesting techniques.
See <a href="http://groups.yahoo.com/group/fc-solve-discuss/messages/685">some
discussion of it</a> in the fc-solve-discuss mailing list.
</p>
<p>
Discussions with Mr. Campbell have inspired some techniques for generating shorter
solutions including the "flares" feature.
</p>
</li>

<li>
<p>
<a href="http://www.tranzoa.net/~alex/plspider.htm">plspider.exe - a solver
for Spider Solitaire</a> - the site contains a Win32 binary, which, due
to bad design decisions, is using many of the author's custom libraries,
and is also multi-threaded. The author has sent me the source code, but
I am unable to compile it because I lack the libraries that he used.
</p>
</li>

<li>
<p>
<a href="http://download.cnet.com/FreeCell-Solver/3000-18522_4-54671.html">GUI
FreeCell Solver 1.0rc5 for Mac OS X 10.2 by JCP Software</a> - an
original solver written in C++ (with a GUI). The web-site is short on details,
but I was contacted about it by the author, Julian Pellico, who informed me
that he has made the
<a href="http://www.assembla.com/code/fcsolve-mac/subversion/nodes">source</a>
available as open-source software under the GPLv3.
</p>
</li>

<li>
<p>
<a href="http://broadcast.oreilly.com/2009/01/january-column-graph-algorithm.html">Algorithm to Solve FreeCell Solitaire Games</a> - George T. Heineman's
step-by-step tutorial on O'Reilly-Net about how to construct a solver for
Freecell in Java.
</p>
</li>

<li>
<p>
<a href="http://www.shlomifish.org/open-source/projects/black-hole-solitaire-solver/">Solver
for “Black Hole” Solitaire</a> - a solver for the patience games
“Golf”, “Black Hole”, and “All in a Row” in C (originally in Perl 5) by the same
author as Freecell Solver.
</p>
</li>

<li>
<p>
<a href="https://sourceforge.net/projects/freecelljsolver/">FreeCell
Java Solver</a> - a solver for Freecell written in Java on Sourceforge.net.
Open source under the restrictive GPLv3 licence.
</p>
</li>

<li>
<p>
[% solitairey %] - contains
a Freecell solver written in JavaScript. The
<a href="https://github.com/shlomif/Solitairey/branches">source code</a> for it is
available on GitHub, under the open source FreeBSD licence.
</p>
</li>

<li>
<p>
<a href="https://github.com/ShootMe/Klondike-Solver">ShootMe's
Klondike Solver</a> - a solver for Klondike Solitaire (known as the “Solitaire”
game from Windows) written in C++ and available under the permissive
MIT/Expat Licence.
</p>
</li>

<li>
<p>
<a href="http://www.systemcall.org/blog/2011/09/freecell-puzzles-solver-api/">“FreeCell
puzzles solver API”</a> by rengolin - a blog post about
<a href="https://github.com/rengolin/code/tree/master/Projects/freecell">some
C++ code on GitHub</a> for solving Freecell. Under the
<a href="https://github.com/rengolin/code/blob/master/license.txt">GPL
version 3</a> open source (but restrictive) licence.
</p>
</li>

<li>
<p>
<a href="https://github.com/shirha/freecell-solver">A
Solver for Freecell written in Java by Shirl Hart</a> (on GitHub) - produces
very short solutions.
</p>

<ul>

<li>
<p>
<a href="https://github.com/shlomif/shirl-hart-freecell-solver">Shlomi Fish's GitHub fork</a> - with
some enhancements.
</p>
</li>

<li>

<p>
<a href="http://freecell-in-miniature.appspot.com/">Freecell in Miniature
web-interface to the solutions</a>
</p>

</li>

<li>

<p>
<a href="http://metacpan.org/release/Freecell-App">The Freecell-App CPAN
Package</a> - a “simple Freecell Solver” written in Perl and distributed as
a CPAN (= Comprehensive Perl Archive Network) package. By
<a href="http://metacpan.org/author/SHIRHA">Shirl Hart</a>. Open source
under the permissive (and GPLv2/GPLv3 compatible)
<a href="http://en.wikipedia.org/wiki/Artistic_License#Artistic_License_2.0">Artistic
License 2.0</a>. ( Older effort, which was used as the basis for the
faster Java code. )
</p>

</li>

</ul>

</li>

<li>

<p>
<a href="http://en.wikipedia.org/wiki/Zillions_of_Games">Zillions of
Games</a> - a commercial and proprietary
<a href="http://en.wikipedia.org/wiki/General_game_playing">general game
playing</a> application for Microsoft Windows, which according to its
wikipedia page had support for Freecell programmed by its users.
</p>

</li>

<li>
<p>
<a href="https://github.com/boundedvariation/Freecell">Haskell freecell
library</a> - contains a solver. Expat licence. Also see
<a href="https://www.reddit.com/r/haskell/comments/2dkspq/haskell_freecell_library/">a Reddit discussion</a> about it.
</p>
</li>

<li>
<p>
<a href="https://www.kde.org/applications/games/kpatience">KPatience / kpat</a> - contains
solvers for some patience variants derived from a forked version of patsolve.
Can be used from the command line by writing <code>kpat --start 1 --end 32000 --solve Freecell</code>
where the argument after "--solve" is the variant ID. Open source under GPLv2.
</p>
</li>

<li>
<p>
<a href="https://github.com/mchung94/pyramid-solver">Pyramid Solitaire Solver</a> - open
source under the Expat licence and written in <a href="https://en.wikipedia.org/wiki/Common_Lisp">Common Lisp</a>.
(Untested).
</p>
</li>

<li>
<p>
<a href="https://github.com/thecharlesblake/Solvitaire">Solvitaire</a> - an open-source (GPLed)
solver for many Solitaire variants (including Freecell and Klondike) written in C++.
</p>
</li>

<li>
<p>
<a href="https://github.com/alaatm/freecell-solver">A* Search-based Freecell Solver in .NET</a> - open
source under the MIT / Expat licence.
</p>
</li>

</ul>

[% END %]

[% WRAPPER h2_section id = "reviews", title = "Reviews of Freecell Solver" %]

<ul>
<li>
<p>
<a href="http://www.solitairelaboratory.com/fcfaq.html">
Review in the Freecell FAQ</a>
</p>
</li>

<li>
<p>
<a href="http://web.archive.org/web/20011130142144/http://sweetcode.org/archive/2001-11.html">Sweet Code's Review</a> (on the Internet Archive).
</p>
</li>

<li>
<p>
<a href="http://seniorcitizen.blogspot.com/2001_11_25_archive.html#7474819">Senior Citizen</a> -
quite amusing, IMO.
</p>
</li>

<li>
<p>
<a href="http://web.archive.org/web/20051226092627/http://lists.golum.org/pipermail/golum-nontech/2001-October/000303.html">A
review by Mark Turnage of the "Group of Linux Users in Memphis"</a> - also
quite amusing.
</p>
</li>

<li>
<p>
<a href="http://suso.suso.org/xulu/Thoughts/Thanks_Freecell_solver!">SusoSight's
Thought of the Moment Regarding Freecell Solver</a>
</p>
</li>
</ul>

[% END %]

[% WRAPPER h2_section id = "videos", title = "Videos: Screencasts, demos, etc." %]

<ul>

<li>
<p>
<a href="https://www.youtube.com/watch?v=K-AU6yiV0FM">KPatience Solving a Freecell deal automatically</a> -
a screen recording which is short and with (hopefully) attractive visuals.
</p>
</li>

<li>
<p>
<a href="https://www.youtube.com/watch?v=hYdqNuX4WJc">“PySol FC
Solving a Freecell Deal Using Freecell Solver's qualified-seed-improved
preset.”</a> - a screencast.
</p>
</li>

<li>
<p>
<a href="https://www.youtube.com/watch?v=EHQ2bWGeYMg">“Screencast:
PySolFC solving Freecell using Freecell Solver”</a> - an older screencast
using a preset that usually generates longer solutions.
</p>
</li>

<li>
<p>
<a href="https://www.youtube.com/watch?v=oGgnyysFNTQ">“iPhone
Freecell Bot”</a> - video of a computer solving Freecell by interacting with
an external iPhone device.
</p>
</li>
</ul>

[% END %]

[% WRAPPER h2_section id = "old_pages", title = "Old pages of this site" %]

<p>
These are some old pages of this site that are no longer of relevance and
were removed from the navigation menu.
</p>

<ul>

<li>
<p>
<a href="[% base_path %]pysol/">PySol Integration</a>.
</p>
</li>

<li>
<p>
<a href="http://fc-solve.shlomifish.org/michael_mann/">Hypertext documentation
for the Freecell Solver code</a> - generated by Doxygen, and incredibly
out-of-date.
</p>
</li>

<li>
<p>
<a href="[% base_path %]current-status.html">What is the <b>Status</b> of Freecell
Solver</a> - Freecell Solver is actively maintained again.
</p>
</li>

<li>
<p>
<a href="[% base_path %]book.html">The Book</a> - a book about Freecell Solver was
originally planned, but this is no longer actively pursued.
</p>
</li>

</ul>

[% END %]

[% WRAPPER h2_section id = "general_freecell", title = "General Freecell Links" %]

<ul>
<li>
<p>
<a href="http://www.solitairelaboratory.com/fcfaq.html">The Freecell FAQ</a> -
contains a lot of interesting questions and answers regarding Freecell.
</p>
</li>

<li>
<p>
<a href="http://cards.wikia.com/wiki/Main_Page">Card Games Wikia
(Deckipedia)</a> - a wiki about card games, including but not limited to
Solitaire games such as Freecell.
</p>
</li>

<li>
<p>
<a href="http://people.cs.uu.nl/hansb/d.freecell/freecellhtml.html">An
unsolvable instance of Freecell</a> - a proof that not all initial Freecell
instances are solvable.
</p>
</li>

<li>
<p>
<a href="http://en.wikipedia.org/wiki/FreeCell">"FreeCell" on
the Wikipedia</a>.
</p>
</li>

<li>

<p>
<a href="http://freecellgamesolutions.com/">Short FreeCell Solutions</a> -
contains solutions to the first 1 million Microsoft deals. The first 32,000
require JavaScript to be viewed, but those above 32,000 can be read using
a form submission. The solver that generated these solution does not appear
to be available.
</p>

<p>
The maintainer of this site has reported some broken links here, so it's
only fair that we will link back to him.
</p>

</li>

<li>
<p>
[% solitairey %] - play Freecell and other
Patience games online. The
<a href="https://github.com/shlomif/Solitairey/branches">source code</a> is
available on GitHub.
</p>
</li>

<li>
<p>
<a href="http://worldofsolitaire.com/">“World of Solitaire”</a> - another
attractive online implementation of various Patience games, including Freecell,
and Baker's Game.
</p>
</li>

<li>
<p>
<a href="http://www.solitaireking.com/">Solitaire King</a> - another
online Solitaire site. Includes <a href="http://www.solitaireking.com/hebrew">a
version with a Hebrew interface</a>.
</p>
</li>

<li>
<p>
<a href="https://solitaire.gg/">Solitaire.gg</a> - a web-based solitaire
with open source code written in <a href="https://en.wikipedia.org/wiki/Scala_(programming_language)">Scala</a>.
</p>
</li>

</ul>

[% END %]

[% END %]
