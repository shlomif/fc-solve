[%- SET title = "Report: The solvability statistics of the Freecell Pro 4-Freecells Deals" -%]
[% BLOCK page_extra_head_elements %]
[% load_javascript_srcs("jquery.flot.js") %]
[% INCLUDE js_requirejs %]
[% END %]
[%- WRAPPER wrap_html -%]

<script>
[% requirejs_conf() %]
[% "\n" %]
require(["chart-using-flot--4fc-intractable"], function (chart) { $(function() { _fcs_chart_all(chart.process_and_chart_data); }) } );
</script>

<toc />

[% WRAPPER h2_section id = "intro", title = "Introduction" %]

<p>
<b>Publishing Date:</b> 12 December 2016.
</p>

<p>
<b>Updated:</b> 18 August 2018.
</p>

<p>
Theodore Pringle had posted <a href="https://groups.yahoo.com/neo/groups/fc-solve-discuss/conversations/messages/1466">an announcement</a>
to the "fc-solve-discuss" group, where he said that he ran a
<a href="https://en.wikipedia.org/wiki/FreeCell">Freecell</a> solver over all
the deals in the 8 milliard (1 to 8,589,934,591)
<a href="http://cards.wikia.com/wiki/FreeCell_Pro">Freecell Pro</a> deals range
which are based on the original <a href="https://en.wikipedia.org/wiki/Microsoft_FreeCell">Microsoft FreeCell</a> dealing.
He ended up discovering that there are 102,032
impossible deals and 46 intractable deals. An “intractable” deal in this
context means a deal for which all definitive solvers ran out of resources
(usually memory) before determining whether it was solvable or impossible.
(Also see <a href="https://www.reddit.com/r/gamedev/comments/5e9qp0/report_solving_the_remaining_4freecells/daaxgby/">a discussion about it on Reddit</a>.)
Further analysis reduced the number of intractable deals down to 9 - see
<a href="https://github.com/shlomif/freecell-pro-intractable-deals">the updated
list</a>.
</p>

<p>
I (= Shlomi Fish) set out to determine the solvability of these intractable
deals while using
<a href="http://fc-solve.shlomifish.org/">Freecell Solver</a>'s
depth_dbm_fc_solver, which is a solver which occupies relatively
little RAM, and aims to completely scan all positions in a board and
conclusively determine whether it is solvable or not. That solver was first
ran on an
<a href="https://aws.amazon.com/">Amazon Web Services (“AWS”)</a> EC2 node
with 256 GB of RAM. (Thanks to Jonathan Ringstad for the suggestion to use
AWS.)
</p>

<p>
Running the solver there has shown that 8 out of the 9 deals were impossible
to solve, while the 9th deal - Deal 6825625742 ran out of hard disk space (we
were given only 8 GB of disk space by default, which turned out to not be
enough). After some delay, a new EC2 node with the same amount of RAM (= 256
GB) but this time with more hard-disk space was rented and the solver was ran
on deal 6825625742 again. This time, it ran to completion, and proved the deal
to be impossible as well, thus yielding no remaining intractable deals in
the FreeCell Pro range.
</p>

[% END %]

[% WRAPPER h2_section id = "conclusions", title = "Conclusions" %]

<p>
Out of the 8.6 milliard Freecell Pro deals, there are 102,075 ones that
are impossible with 4 freecells, or approximately one impossible deal out
of 84,000 random deals. The list of indices of these deals can be found
in <a href="https://github.com/shlomif/freecell-pro-impossible-deals">a GitHub
repository</a> in part based on a Google Drive <a href="https://drive.google.com/drive/folders/0B6WZWNModsLfaEIzbnM5UkpHek0">folder</a> maintained by
Theodore Pringle.
</p>

<p>
Note that 6 deals in the range are also impossible to solve with 5 freecells.
These deals are: 14720822, 647519280, 3015622123, 5705339228, 7273316239 and
7573544118. They are all solvable using 6 or more freecells.

</p>

[% WRAPPER h3_section id = "reflections", title = "Some Reflections" %]

<p>
One surprising fact is that solving 4-freecells deals was
much easier for us to do programatically than solving the same
2-freecells deals. An
<a href="http://fc-solve.blogspot.co.il/2012/09/two-freecell-solvability-report-for.html">earlier report</a>
about their statistics, ran into more difficulties solving the first 400,000
2-freecells deals, which is a deals’ space smaller by over 4 orders of
magnitude. Perhaps this can be explained by the fact that many more deals
are winnable using 4 freecells.
</p>

[% END %]

[% END %]

[% WRAPPER h2_section id = "charts", title = "Charts" %]

[% WRAPPER h3_section id = "queue-items", title = "Queue Items Per Iterations for Each of the Deals" %]

<p>
<b>Note:</b> the depth_dbm_fc_solver uses a variation on
<a href="https://en.wikipedia.org/wiki/Breadth-first_search">breadth-first
search</a> where we keep a queue of items to check and check an iterations
count of states. The x-axis - "Iterations" roughly corresponds to time while
the y-axis, corresponds to the number of states in the queue.
</p>

[% WRAPPER h4_section id = "iters-summary-table", title = "Iterations Summary Table" %]

[% charts1() %]

[% END %]

[% END %]

[% END %]

[% WRAPPER h2_section id = "future_directions", title = "Future Directions" %]

<p>
The version of the depth_dbm_fc_solver that was used for solving the intractable
deals in this report had poor multitasking/multi-threading scalability so work
was done in <a href="https://github.com/shlomif/fc-solve/tree/feature-branch--depth-dbm-solver--batches--issue7">the “feature-branch--depth-dbm-solver--batches--issue7” branch</a> in an attempt to mitigate that. The benchmarks appeared to
be encouraging.
</p>

<p>
Some further work has been done in <a href="https://github.com/shlomif/fc-solve/tree/feature-branch--depth-dbm-solver--condvars--issue8">the “feature-branch--depth-dbm-solver--condvars--issue8” branch</a> but results are less conclusive and
both “before” and “after” benchmarks yield a large variance.
</p>

<p>
One note is that we were told that the cost of additional disk space (beyond
the pre-allocated 8 GB) on Amazon EC2 is prohibitive and that it would be
cheaper to make use of <a href="https://en.wikipedia.org/wiki/Amazon_S3">Amazon
S3</a>. We wish to look into writing an optional S3 backend for the depth_dbm_fc_solver’s offloading queue
by using the <a href="https://github.com/aws/aws-sdk-cpp">AWS SDK for C++</a>
which is open source and appears to be well-maintained and stable.
</p>

<p>
Shlomi Fish also wishes to try to independently confirm the impossibility of
the other deals on Theodore Pringle’s list, because he used a solver which
used to have some false negatives. This effort ran into RAM shortage problems
on his personal computer which only has 8 GB of RAM so it may require getting
access to a more capable machine.
</p>

<p>
Another potential future direction is that we noticed that some terminal
game positions are seemingly impossible to a human player but the computer
solvers just move cards on top of each others and into empty slots using
reversible moves. We wish to investigate some potential prunes to detect such
terminal positions and avoid traversing them further.
</p>
[% END %]

[% WRAPPER h2_section id = "links", title = "Links and References" %]

<ul>

<li>
<p>
<a href="https://drive.google.com/drive/u/0/folders/0B6WZWNModsLfaEIzbnM5UkpHek0">Theodore Pringle’s lists of impossible and intractable FC-Pro deals</a> - on
Google Drive.
</p>
</li>

<li>
<p>
<a href="https://github.com/shlomif/freecell-pro-impossible-deals">A GitHub
repository containing the same lists of impossible deals</a>
</p>
</li>

<li>
<p>
<a href="https://github.com/shlomif/fc-solve/blob/master/fc-solve/scripts/prepare-self-contained-dbm-etc-solvers-packages-for-hpc-machines/prepare_aws_depth_dbm_fc_solver_self_contained_package.pl">The script used to prepare the source package for deployment</a>
</p>
</li>

<li>
<p>
<a href="https://groups.yahoo.com/neo/groups/fc-solve-discuss/conversations/messages/1483">fc-solve-discuss thread about the effort</a>
</p>
</li>

<li>
<p>
<a href="[% base_path %]charts/fc-pro--4fc-intractable-deals--report/data/">Log/output files of the runs</a>
</p>
</li>

<li>
<p>
<a href="[% base_path %]faq.html#what_are_ms_deals">Explanation of what
the Microsoft Freecell deals are</a> - entry in the Freecell Solver FAQ.
</p>
</li>

</ul>

[% END %]

[% END %]
