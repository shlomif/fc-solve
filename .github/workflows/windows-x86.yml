# This file is GENERATED BY
# fc-solve/CI-testing/translate-travis.yml-to-github-actions.py
jobs:
    perl:
        runs-on: windows-latest
        steps:
        -   name: Setup perl
            uses: shogo82148/actions-setup-perl@v1
            with:
                distribution: strawberry
                perl-version: ${{ matrix.perl-version }}
        -   name: Set git to use LF
            run: 'git config --global core.autocrlf false

                git config --global core.eol lf

                '
        -   uses: actions/checkout@v2
            with:
                submodules: 'true'
        -   name: perl -V
            run: perl -V
        -   name: install cpanm and mult modules
            uses: perl-actions/install-with-cpanm@v1
            with:
                install: 'Code::TidyAll::Plugin::ClangFormat

                    Code::TidyAll::Plugin::TestCount

                    CHI

                    Devel::Trace

                    Docker::CLI::Wrapper::Container

                    Games::Solitaire::Verify::HorneAutomovePrune

                    LWP

                    Path::Tiny

                    Perl::Tidy

                    Task::FreecellSolver::Testing

                    Test::Code::TidyAll'
        -   name: install and test_script code
            run: '@echo on

                SET MSYS_PACKAGES=mingw-w64-x86_64-cmocka mingw-w64-i686-cmocka mingw-w64-x86_64-pkg-config
                mingw-w64-i686-pkg-config

                SET PY3MODS=cffi freecell_solver pycotap pysol_cards six

                choco install pkgconfiglite || ( echo Failed & exit /B 1 )

                dir || ( echo Failed & exit /B 1 )

                cd || ( echo Failed & exit /B 1 )

                c:\msys64\usr\bin\bash -lc "pacman --noconfirm -Syuu" || ( echo Failed
                & exit /B 1 )

                choco install ag || ( echo Failed & exit /B 1 )

                if not exist C:\fcsdep mkdir C:\fcsdep || ( echo Failed & exit /B
                1 )

                python3 -mpip install %PY3MODS% || ( echo Failed & exit /B 1 )

                perl -v || ( echo Failed & exit /B 1 )

                SET PERL5LIB=C:/_P5/lib/perl5

                SET PERL_LOCAL_LIB_ROOT=C:/_P5

                SET PERL_MB_OPT=--install_base C:/_P5

                SET PERL_MM_OPT=INSTALL_BASE=C:/_P5

                perl -v || ( echo Failed & exit /B 1 )

                if not exist C:\fcsdep\gperf-3.1.tar.gz curl -o C:\fcsdep\gperf-3.1.tar.gz
                http://ftp.gnu.org/pub/gnu/gperf/gperf-3.1.tar.gz || ( echo Failed
                & exit /B 1 )

                copy C:\fcsdep\gperf-3.1.tar.gz . || ( echo Failed & exit /B 1 )

                tar -xvf gperf-3.1.tar.gz || ( echo Failed & exit /B 1 )

                set MAKE=C:/strawberry/c/bin/gmake.exe

                cd gperf-3.1 && perl ../fc-solve/scripts/ci-build-gperf-mswin.pl &&
                cd .. || ( echo Failed & exit /B 1 )

                git clone https://github.com/clibs/cmocka fcsdep || ( echo Failed
                & exit /B 1 )

                mkdir fcsdep\b || ( echo Failed & exit /B 1 )

                cd fcsdep\b || ( echo Failed & exit /B 1 )

                set CMAKE_MAKE_PROGRAM=C:\strawberry\c\bin\gmake.exe

                cmake -G "MinGW Makefiles" -DCMAKE_MAKE_PROGRAM=%CMAKE_MAKE_PROGRAM%
                -DCMAKE_INSTALL_PREFIX=C:\fcsdep .. || ( echo Failed & exit /B 1 )

                echo %PATH% || ( echo Failed & exit /B 1 )

                gmake || ( echo Failed & exit /B 1 )

                gmake install || ( echo Failed & exit /B 1 )

                cd ..\..\ || ( echo Failed & exit /B 1 )

                git clone https://github.com/shlomif/rinutils rinutils || ( echo Failed
                & exit /B 1 )

                mkdir rinutils\b || ( echo Failed & exit /B 1 )

                cd rinutils\b || ( echo Failed & exit /B 1 )

                set CMAKE_MAKE_PROGRAM=C:\strawberry\c\bin\gmake.exe

                cmake -G "MinGW Makefiles" -DWITH_TEST_SUITE=OFF -DCMAKE_MAKE_PROGRAM=%CMAKE_MAKE_PROGRAM%
                -DCMAKE_INSTALL_PREFIX=C:\fcsdep .. || ( echo Failed & exit /B 1 )

                echo %PATH% || ( echo Failed & exit /B 1 )

                gmake || ( echo Failed & exit /B 1 )

                gmake install || ( echo Failed & exit /B 1 )

                SET MYOLDPATH_=%PATH%

                mkdir ..\b32 || ( echo Failed & exit /B 1 )

                cd ..\b32 || ( echo Failed & exit /B 1 )

                cmake -G "MinGW Makefiles" -DWITH_TEST_SUITE=OFF -DCMAKE_MAKE_PROGRAM=%CMAKE_MAKE_PROGRAM%
                -DCMAKE_INSTALL_PREFIX=C:\fcsdep32 .. || ( echo Failed & exit /B 1
                )

                echo %PATH% || ( echo Failed & exit /B 1 )

                gmake || ( echo Failed & exit /B 1 )

                gmake install || ( echo Failed & exit /B 1 )

                SET PATH=%MYOLDPATH_%

                cd ..\..\ || ( echo Failed & exit /B 1 )

                set CMAKE_MAKE_PROGRAM=C:\strawberry\c\bin\gmake.exe

                set LIBRARY_PATH=C:\fcsdep\lib

                set CMAKE_LIBRARY_PATH=C:\fcsdep\lib

                set CMAKE_PREFIX_PATH=C:/fcsdep;c:/fcsdep32

                set LD_LIBRARY_PATH=C:\fcsdep\lib

                set PKG_CONFIG_PATH=C:\fcsdep\lib\pkgconfig;

                dir c:\fcsdep /s || ( echo Failed & exit /B 1 )

                set CPATH=C:\fcsdep\include

                set PATH=C:\fcsdep\bin;%PATH%

                del c:\msys64\mingw64\bin\python*.exe || ( echo Failed & exit /B 1
                )

                set HARNESS_BREAK=1

                set FCS_USE_TEST_RUN=1

                mkdir fc-solve\b || ( echo Failed & exit /B 1 )

                cd fc-solve\b || ( echo Failed & exit /B 1 )

                perl ../scripts/Tatzer -G "MinGW Makefiles" -l x64t --dbm=none ||
                ( echo Failed & exit /B 1 )

                SET PATH=C:\projects\fc-solve\fc-solve\scripts\win32;%PATH%

                echo %PATH% || ( echo Failed & exit /B 1 )

                gmake || ( echo Failed & exit /B 1 )

                gmake boards || ( echo Failed & exit /B 1 )

                echo %PATH% || ( echo Failed & exit /B 1 )

                cd .. || ( echo Failed & exit /B 1 )

                mkdir pkg-build || ( echo Failed & exit /B 1 )

                cd pkg-build || ( echo Failed & exit /B 1 )

                perl ../scripts/Tatzer -G "MinGW Makefiles" --notest-suite -r --dbm=none
                || ( echo Failed & exit /B 1 )

                gmake package || ( echo Failed & exit /B 1 )

                cpack -G WIX || ( echo Failed & exit /B 1 )

                perl ../scripts/Tatzer -G "MinGW Makefiles" -l pysol_defs --notest-suite
                -r --prefix=c:\fcs-pysol --dbm=none || ( echo Failed & exit /B 1 )

                gmake install || ( echo Failed & exit /B 1 )

                7z a fc-solve-for-pysol.zip c:/fcs-pysol || ( echo Failed & exit /B
                1 )

                '
            shell: cmd
        -   name: upload-build-artifacts-Freecell Solver Zip Distribution for PySol
                FC-${{ matrix.runs-on }}
            uses: actions/upload-artifact@v4
            with:
                name: Freecell Solver Zip Distribution for PySol FC
                path: fc-solve\pkg-build\fc-solve-for-pysol.zip
        -   name: upload-build-artifacts-Freecell Solver Win32 Package-${{ matrix.runs-on
                }}
            uses: actions/upload-artifact@v4
            with:
                name: Freecell Solver Win32 Package
                path: fc-solve\pkg-build\freecell-solver-*-win32.exe
        -   name: upload-build-artifacts-Freecell Solver Win32 MSI Package-${{ matrix.runs-on
                }}
            uses: actions/upload-artifact@v4
            with:
                name: Freecell Solver Win32 MSI Package
                path: fc-solve\pkg-build\freecell-solver-*-win32.msi
        strategy:
            fail-fast: true
            matrix:
                perl-version:
                - '5.38'
name: windows-x86
'on':
- push
